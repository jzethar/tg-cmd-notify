name: Lint and build

on:
  workflow_dispatch:
  push:
  pull_request:
  release:
    types:
      - created  # Trigger on new GitHub release (for Docker build)

jobs:
  lint:
    name: Lint Go Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24

      - name: Download Go Modules
        run: go mod download

      - name: Tidy Go Modules
        run: go mod tidy

      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/HEAD/install.sh | sh -s -- -b $(go env GOPATH)/bin v2.1.6

      - name: Run golangci-lint
        run: |
          $(go env GOPATH)/bin/golangci-lint run --timeout 3m

  build:
    name: Build and Publish Go Binary
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24

      - name: Download Go Modules
        run: go mod download

      - name: Tidy Go Modules
        run: go mod tidy

      - name: Build Go Binary
        run: go build -o tg-cmd-notify .

      - name: Create Release Asset
        id: create_release_asset
        uses: actions/upload-release-asset@v3
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: tg-cmd-notify
          asset_name: tg-cmd-notify-linux-amd64
          asset_content_type: application/octet-stream
